{"ast":null,"code":"var _jsxFileName = \"/Users/kathiateran/Documents/MARLABS/A. TRAINING/PARTHA/Code Practice/reactredux/src/components/CakeContainer.js\";\nimport React from 'react';\nimport { buyCake } from '../redux';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CakeContainer() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"# of cakes:\", props.numberOfCakes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: [\"buy cake: \", props.buyCake]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n} //when you click the button, you need a way to access the store\n//...a way to map it\n//state from redux store is mapped to component props\n\n\n_c = CakeContainer;\n\nconst mapStateToProps = state => {\n  return {\n    numberOfCakes: state.numberOfCakes\n  };\n}; //Dispatches\n//map dispatch of an action creator to prop in component\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    buyCake: () => dispatch(buyCake())\n  };\n}; //so this part is interesting\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CakeContainer); //component received 2 props: numberOfCakes\n\nvar _c;\n\n$RefreshReg$(_c, \"CakeContainer\");","map":{"version":3,"sources":["/Users/kathiateran/Documents/MARLABS/A. TRAINING/PARTHA/Code Practice/reactredux/src/components/CakeContainer.js"],"names":["React","buyCake","connect","CakeContainer","props","numberOfCakes","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;;AAEA,SAASC,aAAT,GAAyB;AACrB,sBACI;AAAA,4BACI;AAAA,gCAAgBC,KAAK,CAACC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,+BAAmBD,KAAK,CAACH,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,C,CACD;AACA;AACA;;;KAVSE,a;;AAWT,MAAMG,eAAe,GAAGC,KAAK,IAAG;AAC5B,SAAO;AACHF,IAAAA,aAAa,EAAEE,KAAK,CAACF;AADlB,GAAP;AAGH,CAJD,C,CAKA;AACA;;;AACA,MAAMG,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAM;AACFR,IAAAA,OAAO,EAAC,MAAKQ,QAAQ,CAACR,OAAO,EAAR;AADnB,GAAN;AAGH,CAJD,C,CAKA;;;AACA,eAAeC,OAAO,CAACI,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CL,aAA7C,CAAf,C,CAGA","sourcesContent":["import React from 'react'\nimport {buyCake} from '../redux'\nimport {connect} from 'react-redux'\n\nfunction CakeContainer() {\n    return (\n        <>\n            <h2># of cakes:{props.numberOfCakes}</h2>\n            <button>buy cake: {props.buyCake}</button>\n        </>\n    )\n}\n//when you click the button, you need a way to access the store\n//...a way to map it\n//state from redux store is mapped to component props\nconst mapStateToProps = state =>{  \n    return {\n        numberOfCakes: state.numberOfCakes\n    }\n}\n//Dispatches\n//map dispatch of an action creator to prop in component\nconst mapDispatchToProps = dispatch => {\n    return{\n        buyCake:()=> dispatch(buyCake())\n    }\n}\n//so this part is interesting\nexport default connect(mapStateToProps, mapDispatchToProps)(CakeContainer)\n\n\n//component received 2 props: numberOfCakes"]},"metadata":{},"sourceType":"module"}